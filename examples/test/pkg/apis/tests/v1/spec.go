package v1

import (
	"github.com/golang/protobuf/proto"
	"istio.io/api/networking/v1alpha3"
	v1 "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// EDIT THIS FILE!  This file should contain the definitions for your API Spec and Status!
// NOTE: json tags are required.  Any new fields you add must have json tags for the fields to be serialized.
// Important: Run "autopilot generate" to regenerate code after modifying this file
// Add custom validation using kubebuilder tags: https://book-v1.book.kubebuilder.io/beyond_basics/generating_crd.html

// TestSpec defines the desired state of Test
// +k8s:openapi-gen=true
type TestSpec struct {
	Target    v1.ObjectReference `json:"target"`
	Faults    HTTPFaultInjection `json:"faults"`
	Threshold float64            `json:"threshold"`
	Timeout   metav1.Duration    `json:"timeout"`
}

type HTTPFaultInjection v1alpha3.HTTPFaultInjection

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPFaultInjection) DeepCopyInto(out *HTTPFaultInjection) {
	clone := proto.Clone((*v1alpha3.HTTPFaultInjection)(in)).(*v1alpha3.HTTPFaultInjection)
	*out = HTTPFaultInjection(*clone)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPFaultInjection.
func (in *HTTPFaultInjection) DeepCopy() *HTTPFaultInjection {
	if in == nil {
		return nil
	}
	out := new(HTTPFaultInjection)
	in.DeepCopyInto(out)
	return out
}

// TestStatusInfo defines an observed condition of Test
// +k8s:openapi-gen=true
type TestStatusInfo struct {
	TimeStarted metav1.Time `json:"timeStarted"`
}
