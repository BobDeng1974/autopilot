// Code generated by protoc-gen-go. DO NOT EDIT.
// source: autopilot.proto

package v1

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	wrappers "github.com/golang/protobuf/ptypes/wrappers"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// The AutopilotProject file is the root configuration file for the project itself.
//
// This file will be used to build and deploy the autopilot operator.
// It is loaded automatically by the autopilot CLI. Its
// default location is 'autopilot.yaml'
type AutopilotProject struct {
	// the name of the Operator
	// this is used to name and label loggers, k8s resources, and metrics exposed
	// by the operator. Should be [a valid Kube resource name](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
	OperatorName string `protobuf:"bytes,1,opt,name=operatorName,proto3" json:"operatorName,omitempty"`
	// the set of Top-Level Custom Resources that are managed by this Operator.
	// the Operator will run a [Controller](https://kubernetes.io/docs/concepts/architecture/controller/)
	// loop for each resource.
	// To add CRDs without creating a controller,
	// set enableController: false on the resource.
	Resources []*Resource `protobuf:"bytes,2,rep,name=resources,proto3" json:"resources,omitempty"`
	// Import Third-party CRDs which can be used as parameters.
	// Extends Autopilot's builtin types
	ThirdPartyResources []*ThirdPartyResource `protobuf:"bytes,5,rep,name=thirdPartyResources,proto3" json:"thirdPartyResources,omitempty"`
	// custom Queries which extend Autopilot's builtin metrics queries
	Queries              []*MetricsQuery `protobuf:"bytes,6,rep,name=queries,proto3" json:"queries,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *AutopilotProject) Reset()         { *m = AutopilotProject{} }
func (m *AutopilotProject) String() string { return proto.CompactTextString(m) }
func (*AutopilotProject) ProtoMessage()    {}
func (*AutopilotProject) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7c7e86e2b87635e, []int{0}
}

func (m *AutopilotProject) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AutopilotProject.Unmarshal(m, b)
}
func (m *AutopilotProject) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AutopilotProject.Marshal(b, m, deterministic)
}
func (m *AutopilotProject) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AutopilotProject.Merge(m, src)
}
func (m *AutopilotProject) XXX_Size() int {
	return xxx_messageInfo_AutopilotProject.Size(m)
}
func (m *AutopilotProject) XXX_DiscardUnknown() {
	xxx_messageInfo_AutopilotProject.DiscardUnknown(m)
}

var xxx_messageInfo_AutopilotProject proto.InternalMessageInfo

func (m *AutopilotProject) GetOperatorName() string {
	if m != nil {
		return m.OperatorName
	}
	return ""
}

func (m *AutopilotProject) GetResources() []*Resource {
	if m != nil {
		return m.Resources
	}
	return nil
}

func (m *AutopilotProject) GetThirdPartyResources() []*ThirdPartyResource {
	if m != nil {
		return m.ThirdPartyResources
	}
	return nil
}

func (m *AutopilotProject) GetQueries() []*MetricsQuery {
	if m != nil {
		return m.Queries
	}
	return nil
}

// An Autopilot Resource is a Custom Resource.
// Autopilot will generate Go code for
//
type Resource struct {
	// the name (kubernetes Kind) of the Custom Resource
	// e.g. "MyResource"
	Kind string `protobuf:"bytes,1,opt,name=kind,proto3" json:"kind,omitempty"`
	// the Api Group of the top-level
	// CRD for the operator
	// e.g. "mycompany.io"
	Group string `protobuf:"bytes,2,opt,name=group,proto3" json:"group,omitempty"`
	// e.g. "v1"
	Version string `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	// Each phase represents a different
	// stage in the lifecycle of the CRD (e.g. Pending/Succeeded/Failed).
	// <br>
	// Each phase specifies a unique name
	// and its own set of inputs and outputs.
	// <br>
	// If a controller is generated for this Resource,
	// each phase will define the inputs/outputs and work function
	// the controller will run.
	Phases []*Phase `protobuf:"bytes,4,rep,name=phases,proto3" json:"phases,omitempty"`
	// Generate and run a controller to manage this resource.
	// This is set to 'true' by default.
	// Set this to 'false' to create the resource without generating or running a controller for it.
	EnableController *wrappers.BoolValue `protobuf:"bytes,5,opt,name=enableController,proto3" json:"enableController,omitempty"`
	// enable use of a Finalizer to handle object deletion.
	// only applies if enableController is not set to false
	EnableFinalizer      bool     `protobuf:"varint,6,opt,name=enableFinalizer,proto3" json:"enableFinalizer,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Resource) Reset()         { *m = Resource{} }
func (m *Resource) String() string { return proto.CompactTextString(m) }
func (*Resource) ProtoMessage()    {}
func (*Resource) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7c7e86e2b87635e, []int{1}
}

func (m *Resource) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Resource.Unmarshal(m, b)
}
func (m *Resource) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Resource.Marshal(b, m, deterministic)
}
func (m *Resource) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Resource.Merge(m, src)
}
func (m *Resource) XXX_Size() int {
	return xxx_messageInfo_Resource.Size(m)
}
func (m *Resource) XXX_DiscardUnknown() {
	xxx_messageInfo_Resource.DiscardUnknown(m)
}

var xxx_messageInfo_Resource proto.InternalMessageInfo

func (m *Resource) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *Resource) GetGroup() string {
	if m != nil {
		return m.Group
	}
	return ""
}

func (m *Resource) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *Resource) GetPhases() []*Phase {
	if m != nil {
		return m.Phases
	}
	return nil
}

func (m *Resource) GetEnableController() *wrappers.BoolValue {
	if m != nil {
		return m.EnableController
	}
	return nil
}

func (m *Resource) GetEnableFinalizer() bool {
	if m != nil {
		return m.EnableFinalizer
	}
	return false
}

// MeshProviders provide an interface to monitoring and managing a specific
// mesh.
//
// Autopilot does not abstract the mesh API - Autopilot developers must
// still reason able about Provider-specific CRDs. Autopilot's job is to
// abstract operational concerns such as discovering control plane configuration
// and monitoring metrics.
type Phase struct {
	// name of the phase. must be unique
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// description of the phase. used for comments and docs
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	// indicates whether this is the initial phase of the system.
	// exactly one phase must be the initial phase
	Initial bool `protobuf:"varint,3,opt,name=initial,proto3" json:"initial,omitempty"`
	// indicates whether this is a "final" or "resting" phase of the system.
	// when the CRD is in the final phase, no more processing will be done on it
	Final bool `protobuf:"varint,4,opt,name=final,proto3" json:"final,omitempty"`
	// The set of inputs for this phase.
	// The inputs will be retrieved by the scheduler
	// and passed to the worker as input parameters.
	Inputs []*Input `protobuf:"bytes,5,rep,name=inputs,proto3" json:"inputs,omitempty"`
	// the set of outputs for this phase
	// the inputs will be propagated to k8s storage (etcd) by the scheduler.
	//
	// custom outputs can be defined in the
	// autopilot.yaml
	Outputs              []*Output `protobuf:"bytes,6,rep,name=outputs,proto3" json:"outputs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Phase) Reset()         { *m = Phase{} }
func (m *Phase) String() string { return proto.CompactTextString(m) }
func (*Phase) ProtoMessage()    {}
func (*Phase) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7c7e86e2b87635e, []int{2}
}

func (m *Phase) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Phase.Unmarshal(m, b)
}
func (m *Phase) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Phase.Marshal(b, m, deterministic)
}
func (m *Phase) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Phase.Merge(m, src)
}
func (m *Phase) XXX_Size() int {
	return xxx_messageInfo_Phase.Size(m)
}
func (m *Phase) XXX_DiscardUnknown() {
	xxx_messageInfo_Phase.DiscardUnknown(m)
}

var xxx_messageInfo_Phase proto.InternalMessageInfo

func (m *Phase) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Phase) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Phase) GetInitial() bool {
	if m != nil {
		return m.Initial
	}
	return false
}

func (m *Phase) GetFinal() bool {
	if m != nil {
		return m.Final
	}
	return false
}

func (m *Phase) GetInputs() []*Input {
	if m != nil {
		return m.Inputs
	}
	return nil
}

func (m *Phase) GetOutputs() []*Output {
	if m != nil {
		return m.Outputs
	}
	return nil
}

// Input represents an input parameter type
// These can either be a k8s resource,
// a metric, or a webhook.
type Input struct {
	// Types that are valid to be assigned to InputType:
	//	*Input_Resource
	//	*Input_Metric
	//	*Input_Webhook
	InputType            isInput_InputType `protobuf_oneof:"inputType"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Input) Reset()         { *m = Input{} }
func (m *Input) String() string { return proto.CompactTextString(m) }
func (*Input) ProtoMessage()    {}
func (*Input) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7c7e86e2b87635e, []int{3}
}

func (m *Input) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Input.Unmarshal(m, b)
}
func (m *Input) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Input.Marshal(b, m, deterministic)
}
func (m *Input) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Input.Merge(m, src)
}
func (m *Input) XXX_Size() int {
	return xxx_messageInfo_Input.Size(m)
}
func (m *Input) XXX_DiscardUnknown() {
	xxx_messageInfo_Input.DiscardUnknown(m)
}

var xxx_messageInfo_Input proto.InternalMessageInfo

type isInput_InputType interface {
	isInput_InputType()
}

type Input_Resource struct {
	Resource *ResourceParameter `protobuf:"bytes,1,opt,name=resource,proto3,oneof"`
}

type Input_Metric struct {
	Metric string `protobuf:"bytes,2,opt,name=metric,proto3,oneof"`
}

type Input_Webhook struct {
	Webhook string `protobuf:"bytes,3,opt,name=webhook,proto3,oneof"`
}

func (*Input_Resource) isInput_InputType() {}

func (*Input_Metric) isInput_InputType() {}

func (*Input_Webhook) isInput_InputType() {}

func (m *Input) GetInputType() isInput_InputType {
	if m != nil {
		return m.InputType
	}
	return nil
}

func (m *Input) GetResource() *ResourceParameter {
	if x, ok := m.GetInputType().(*Input_Resource); ok {
		return x.Resource
	}
	return nil
}

func (m *Input) GetMetric() string {
	if x, ok := m.GetInputType().(*Input_Metric); ok {
		return x.Metric
	}
	return ""
}

func (m *Input) GetWebhook() string {
	if x, ok := m.GetInputType().(*Input_Webhook); ok {
		return x.Webhook
	}
	return ""
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Input) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Input_Resource)(nil),
		(*Input_Metric)(nil),
		(*Input_Webhook)(nil),
	}
}

// Output represents an output parameter type
// Currently, these can only be a k8s resource
type Output struct {
	// Types that are valid to be assigned to OutputType:
	//	*Output_Resource
	OutputType           isOutput_OutputType `protobuf_oneof:"outputType"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *Output) Reset()         { *m = Output{} }
func (m *Output) String() string { return proto.CompactTextString(m) }
func (*Output) ProtoMessage()    {}
func (*Output) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7c7e86e2b87635e, []int{4}
}

func (m *Output) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Output.Unmarshal(m, b)
}
func (m *Output) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Output.Marshal(b, m, deterministic)
}
func (m *Output) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Output.Merge(m, src)
}
func (m *Output) XXX_Size() int {
	return xxx_messageInfo_Output.Size(m)
}
func (m *Output) XXX_DiscardUnknown() {
	xxx_messageInfo_Output.DiscardUnknown(m)
}

var xxx_messageInfo_Output proto.InternalMessageInfo

type isOutput_OutputType interface {
	isOutput_OutputType()
}

type Output_Resource struct {
	Resource *ResourceParameter `protobuf:"bytes,1,opt,name=resource,proto3,oneof"`
}

func (*Output_Resource) isOutput_OutputType() {}

func (m *Output) GetOutputType() isOutput_OutputType {
	if m != nil {
		return m.OutputType
	}
	return nil
}

func (m *Output) GetResource() *ResourceParameter {
	if x, ok := m.GetOutputType().(*Output_Resource); ok {
		return x.Resource
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Output) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Output_Resource)(nil),
	}
}

type ResourceParameter struct {
	// resource Api Kind
	Kind string `protobuf:"bytes,1,opt,name=kind,proto3" json:"kind,omitempty"`
	// resource Api Group. leave empty for core resources
	Group string `protobuf:"bytes,2,opt,name=group,proto3" json:"group,omitempty"`
	// resource Api Version
	Version string `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	// parameter should be a list of resources
	// (in one or all namespaces)
	// if set to false (default)
	List                 bool     `protobuf:"varint,4,opt,name=list,proto3" json:"list,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResourceParameter) Reset()         { *m = ResourceParameter{} }
func (m *ResourceParameter) String() string { return proto.CompactTextString(m) }
func (*ResourceParameter) ProtoMessage()    {}
func (*ResourceParameter) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7c7e86e2b87635e, []int{5}
}

func (m *ResourceParameter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResourceParameter.Unmarshal(m, b)
}
func (m *ResourceParameter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResourceParameter.Marshal(b, m, deterministic)
}
func (m *ResourceParameter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResourceParameter.Merge(m, src)
}
func (m *ResourceParameter) XXX_Size() int {
	return xxx_messageInfo_ResourceParameter.Size(m)
}
func (m *ResourceParameter) XXX_DiscardUnknown() {
	xxx_messageInfo_ResourceParameter.DiscardUnknown(m)
}

var xxx_messageInfo_ResourceParameter proto.InternalMessageInfo

func (m *ResourceParameter) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *ResourceParameter) GetGroup() string {
	if m != nil {
		return m.Group
	}
	return ""
}

func (m *ResourceParameter) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *ResourceParameter) GetList() bool {
	if m != nil {
		return m.List
	}
	return false
}

// ThirdPartyCustomResource allow code to be generated
// for input/output CRDs that are not built-in to Autopilot.
// These types must be Kubernetes-compatible Go structs.
type ThirdPartyResource struct {
	// the singular CamelCased name of the resource
	// equivalent to Kind
	Kind string `protobuf:"bytes,1,opt,name=kind,proto3" json:"kind,omitempty"`
	// Kubernetes API group for the resource
	// e.g. "networking.istio.io"
	Group string `protobuf:"bytes,2,opt,name=group,proto3" json:"group,omitempty"`
	// Kubernetes API Version for the resource
	// e.g. "v1beta3"
	Version string `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	// the plural CamelCased name of the resource
	// equivalent to the pluralized form of Kind
	PluralKind string `protobuf:"bytes,4,opt,name=pluralKind,proto3" json:"pluralKind,omitempty"`
	// go package (import path) containing the go struct for the resource
	GoPackage            string   `protobuf:"bytes,5,opt,name=goPackage,proto3" json:"goPackage,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ThirdPartyResource) Reset()         { *m = ThirdPartyResource{} }
func (m *ThirdPartyResource) String() string { return proto.CompactTextString(m) }
func (*ThirdPartyResource) ProtoMessage()    {}
func (*ThirdPartyResource) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7c7e86e2b87635e, []int{6}
}

func (m *ThirdPartyResource) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ThirdPartyResource.Unmarshal(m, b)
}
func (m *ThirdPartyResource) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ThirdPartyResource.Marshal(b, m, deterministic)
}
func (m *ThirdPartyResource) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ThirdPartyResource.Merge(m, src)
}
func (m *ThirdPartyResource) XXX_Size() int {
	return xxx_messageInfo_ThirdPartyResource.Size(m)
}
func (m *ThirdPartyResource) XXX_DiscardUnknown() {
	xxx_messageInfo_ThirdPartyResource.DiscardUnknown(m)
}

var xxx_messageInfo_ThirdPartyResource proto.InternalMessageInfo

func (m *ThirdPartyResource) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *ThirdPartyResource) GetGroup() string {
	if m != nil {
		return m.Group
	}
	return ""
}

func (m *ThirdPartyResource) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *ThirdPartyResource) GetPluralKind() string {
	if m != nil {
		return m.PluralKind
	}
	return ""
}

func (m *ThirdPartyResource) GetGoPackage() string {
	if m != nil {
		return m.GoPackage
	}
	return ""
}

// MetricsQueries extend the query options available to workers.
// MetricsQueries are accessible to workers via generated client code
// that lives in <project root>/pkg/metrics
//
//
// The following MetricsQuery:
//
// ```
// name: success-rate
// parameters:
// - Name
// - Namespace
// - Interval
// queryTemplate: |
//     sum(
//         rate(
//             envoy_cluster_upstream_rq{
//                 kubernetes_namespace="{{ .Namespace }}",
//                 kubernetes_pod_name=~"{{ .Name }}-[0-9a-zA-Z]+(-[0-9a-zA-Z]+)",
//                 envoy_response_code!~"5.*"
//             }[{{ .Interval }}]
//         )
//     )
//     /
//     sum(
//         rate(
//             envoy_cluster_upstream_rq{
//                 kubernetes_namespace="{{ .Namespace }}",
//                 kubernetes_pod_name=~"{{ .Name }}-[0-9a-zA-Z]+(-[0-9a-zA-Z]+)"
//             }[{{ .Interval }}]
//         )
//     )
//     * 100
// ```
//
// would produce the following `metrics` Interface:
//
// ```go
// type CanaryDeploymentMetrics interface {
//     metrics.Client
//     GetIstioSuccessRate(ctx context.Context, Namespace, Name, Interval string) (*metrics.QueryResult, error)
//     GetIstioRequestDuration(ctx context.Context, Namespace, Name, Interval string) (*metrics.QueryResult, error)
//     GetEnvoySuccessRate(ctx context.Context, Namespace, Name, Interval string) (*metrics.QueryResult, error)
//     GetEnvoyRequestDuration(ctx context.Context, Namespace, Name, Interval string) (*metrics.QueryResult, error)
// }
// ```
type MetricsQuery struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	QueryTemplate        string   `protobuf:"bytes,2,opt,name=queryTemplate,proto3" json:"queryTemplate,omitempty"`
	Parameters           []string `protobuf:"bytes,3,rep,name=parameters,proto3" json:"parameters,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MetricsQuery) Reset()         { *m = MetricsQuery{} }
func (m *MetricsQuery) String() string { return proto.CompactTextString(m) }
func (*MetricsQuery) ProtoMessage()    {}
func (*MetricsQuery) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7c7e86e2b87635e, []int{7}
}

func (m *MetricsQuery) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MetricsQuery.Unmarshal(m, b)
}
func (m *MetricsQuery) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MetricsQuery.Marshal(b, m, deterministic)
}
func (m *MetricsQuery) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MetricsQuery.Merge(m, src)
}
func (m *MetricsQuery) XXX_Size() int {
	return xxx_messageInfo_MetricsQuery.Size(m)
}
func (m *MetricsQuery) XXX_DiscardUnknown() {
	xxx_messageInfo_MetricsQuery.DiscardUnknown(m)
}

var xxx_messageInfo_MetricsQuery proto.InternalMessageInfo

func (m *MetricsQuery) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MetricsQuery) GetQueryTemplate() string {
	if m != nil {
		return m.QueryTemplate
	}
	return ""
}

func (m *MetricsQuery) GetParameters() []string {
	if m != nil {
		return m.Parameters
	}
	return nil
}

func init() {
	proto.RegisterType((*AutopilotProject)(nil), "autopilot.AutopilotProject")
	proto.RegisterType((*Resource)(nil), "autopilot.Resource")
	proto.RegisterType((*Phase)(nil), "autopilot.Phase")
	proto.RegisterType((*Input)(nil), "autopilot.Input")
	proto.RegisterType((*Output)(nil), "autopilot.Output")
	proto.RegisterType((*ResourceParameter)(nil), "autopilot.ResourceParameter")
	proto.RegisterType((*ThirdPartyResource)(nil), "autopilot.ThirdPartyResource")
	proto.RegisterType((*MetricsQuery)(nil), "autopilot.MetricsQuery")
}

func init() { proto.RegisterFile("autopilot.proto", fileDescriptor_f7c7e86e2b87635e) }

var fileDescriptor_f7c7e86e2b87635e = []byte{
	// 615 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x53, 0xdd, 0x6e, 0x13, 0x3d,
	0x10, 0xed, 0x36, 0xff, 0x93, 0x7e, 0x6a, 0xeb, 0x7e, 0x12, 0xab, 0xaa, 0x54, 0xd1, 0x02, 0x52,
	0x24, 0x44, 0xa2, 0x96, 0x3b, 0xee, 0x08, 0x52, 0x55, 0x84, 0xa0, 0xc1, 0xaa, 0xb8, 0xe0, 0xce,
	0x49, 0xa7, 0x1b, 0x13, 0x67, 0x6d, 0x6c, 0x6f, 0xab, 0xf0, 0x00, 0x3c, 0x02, 0x4f, 0xc4, 0xd3,
	0x20, 0xf1, 0x0e, 0x68, 0x67, 0x77, 0x93, 0x2d, 0xe9, 0x1d, 0xbd, 0xf3, 0x9c, 0x39, 0x33, 0x3e,
	0xc7, 0x33, 0x86, 0x5d, 0x91, 0x7a, 0x6d, 0xa4, 0xd2, 0x7e, 0x60, 0xac, 0xf6, 0x9a, 0x75, 0x56,
	0xc0, 0xe1, 0x71, 0xac, 0x75, 0xac, 0x70, 0x48, 0x89, 0x49, 0x7a, 0x3d, 0xbc, 0xb5, 0xc2, 0x18,
	0xb4, 0x2e, 0xa7, 0x46, 0xbf, 0x03, 0xd8, 0x7b, 0x5d, 0xb2, 0xc7, 0x56, 0x7f, 0xc1, 0xa9, 0x67,
	0x11, 0xec, 0x68, 0x83, 0x56, 0x78, 0x6d, 0x3f, 0x88, 0x05, 0x86, 0x41, 0x2f, 0xe8, 0x77, 0xf8,
	0x1d, 0x8c, 0x9d, 0x40, 0xc7, 0xa2, 0xd3, 0xa9, 0x9d, 0xa2, 0x0b, 0xb7, 0x7b, 0xb5, 0x7e, 0xf7,
	0xf4, 0x60, 0xb0, 0x16, 0xc2, 0x8b, 0x1c, 0x5f, 0xb3, 0xd8, 0x05, 0x1c, 0xf8, 0x99, 0xb4, 0x57,
	0x63, 0x61, 0xfd, 0x92, 0xaf, 0x8a, 0x1b, 0x54, 0xfc, 0xb8, 0x52, 0x7c, 0xb9, 0xc1, 0xe2, 0xf7,
	0x55, 0xb2, 0x13, 0x68, 0x7d, 0x4d, 0xd1, 0x4a, 0x74, 0x61, 0x93, 0x9a, 0x3c, 0xaa, 0x34, 0x79,
	0x8f, 0xde, 0xca, 0xa9, 0xfb, 0x98, 0xa2, 0x5d, 0xf2, 0x92, 0x17, 0xfd, 0x0a, 0xa0, 0x5d, 0x36,
	0x60, 0x0c, 0xea, 0x73, 0x99, 0x5c, 0x15, 0xfe, 0xe8, 0xcc, 0xfe, 0x87, 0x46, 0x6c, 0x75, 0x6a,
	0xc2, 0x6d, 0x02, 0xf3, 0x80, 0x85, 0xd0, 0xba, 0x41, 0xeb, 0xa4, 0x4e, 0xc2, 0x1a, 0xe1, 0x65,
	0xc8, 0xfa, 0xd0, 0x34, 0x33, 0xe1, 0xd0, 0x85, 0x75, 0x92, 0xb0, 0x57, 0x91, 0x30, 0xce, 0x12,
	0xbc, 0xc8, 0xb3, 0x33, 0xd8, 0xc3, 0x44, 0x4c, 0x14, 0xbe, 0xd1, 0x89, 0xb7, 0x5a, 0x29, 0xb4,
	0x61, 0xa3, 0x17, 0xf4, 0xbb, 0xa7, 0x87, 0x83, 0x7c, 0x4a, 0x83, 0x72, 0x4a, 0x83, 0x91, 0xd6,
	0xea, 0x93, 0x50, 0x29, 0xf2, 0x8d, 0x1a, 0xd6, 0x87, 0xdd, 0x1c, 0x3b, 0x93, 0x89, 0x50, 0xf2,
	0x1b, 0xda, 0xb0, 0xd9, 0x0b, 0xfa, 0x6d, 0xfe, 0x37, 0x1c, 0xfd, 0x0c, 0xa0, 0x41, 0x1a, 0x32,
	0xa7, 0xc9, 0x7a, 0x92, 0x74, 0x66, 0x3d, 0xe8, 0x5e, 0xa1, 0x9b, 0x5a, 0x69, 0x7c, 0xe6, 0x2b,
	0xf7, 0x5b, 0x85, 0x32, 0xd7, 0x32, 0x91, 0x5e, 0x0a, 0x45, 0xae, 0xdb, 0xbc, 0x0c, 0xb3, 0x57,
	0xba, 0xce, 0xae, 0x09, 0xeb, 0x84, 0xe7, 0x41, 0xf6, 0x16, 0x32, 0x31, 0xa9, 0x2f, 0x67, 0x5a,
	0x7d, 0x8b, 0xb7, 0x59, 0x82, 0x17, 0x79, 0xf6, 0x1c, 0x5a, 0x3a, 0xf5, 0x44, 0xcd, 0x27, 0xb7,
	0x5f, 0xa1, 0x5e, 0x50, 0x86, 0x97, 0x8c, 0xe8, 0x7b, 0x00, 0x0d, 0x2a, 0x67, 0xaf, 0xa0, 0x5d,
	0xae, 0x13, 0x59, 0xe9, 0x9e, 0x1e, 0xdd, 0xb3, 0x73, 0x63, 0x61, 0xc5, 0x02, 0x3d, 0xda, 0xf3,
	0x2d, 0xbe, 0xe2, 0xb3, 0x10, 0x9a, 0x0b, 0x5a, 0x89, 0xdc, 0xe9, 0xf9, 0x16, 0x2f, 0x62, 0x76,
	0x08, 0xad, 0x5b, 0x9c, 0xcc, 0xb4, 0x9e, 0xe7, 0xc3, 0x3d, 0xdf, 0xe2, 0x25, 0x30, 0xea, 0x42,
	0x87, 0x24, 0x5f, 0x2e, 0x0d, 0x46, 0x1c, 0x9a, 0xb9, 0xb6, 0x7f, 0x11, 0x32, 0xda, 0x01, 0xc8,
	0x9d, 0x51, 0xcf, 0x39, 0xec, 0x6f, 0xd0, 0x1f, 0x64, 0x31, 0x19, 0xd4, 0x95, 0x74, 0xbe, 0x98,
	0x10, 0x9d, 0xa3, 0x1f, 0x01, 0xb0, 0xcd, 0xcf, 0xf5, 0x20, 0xd7, 0x1d, 0x03, 0x18, 0x95, 0x5a,
	0xa1, 0xde, 0x65, 0x9d, 0xea, 0x94, 0xac, 0x20, 0xec, 0x08, 0x3a, 0xb1, 0x1e, 0x8b, 0xe9, 0x5c,
	0xc4, 0x48, 0x6b, 0xdf, 0xe1, 0x6b, 0x20, 0x9a, 0xc1, 0x4e, 0xf5, 0xbf, 0xde, 0xbb, 0xaf, 0x4f,
	0xe1, 0xbf, 0xec, 0x17, 0x2f, 0x2f, 0x71, 0x61, 0x94, 0xf0, 0x58, 0x28, 0xbb, 0x0b, 0x92, 0x8e,
	0xf2, 0x1d, 0x5d, 0x58, 0xeb, 0xd5, 0x48, 0xc7, 0x0a, 0x19, 0x3d, 0xfb, 0xfc, 0x24, 0x96, 0x7e,
	0x96, 0x4e, 0x06, 0x53, 0xbd, 0x18, 0x3a, 0xad, 0xf4, 0x0b, 0xa9, 0x87, 0xab, 0xd9, 0x0d, 0x85,
	0x91, 0xc3, 0x9b, 0x93, 0x49, 0x93, 0xbe, 0xe2, 0xcb, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff, 0xb0,
	0x86, 0x0b, 0xc1, 0x5c, 0x05, 0x00, 0x00,
}
