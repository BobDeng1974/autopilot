// Code generated by protoc-gen-go. DO NOT EDIT.
// source: autopilot.proto

package v1

import (
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// The AutopilotProject file is the root configuration file for the project itself.
//
// This file will be used to build and deploy the autopilot operator.
// It is loaded automatically by the autopilot CLI. Its
// default location is 'autopilot.yaml'
type AutopilotProject struct {
	// the name (kubernetes Kind) of the top-level
	// CRD for the operator
	// Specified via the `ap init <Kind>` command
	Kind string `protobuf:"bytes,1,opt,name=kind,proto3" json:"kind,omitempty"`
	// the ApiVersion of the top-level
	// CRD for the operator
	ApiVersion string `protobuf:"bytes,2,opt,name=apiVersion,proto3" json:"apiVersion,omitempty"`
	// the name of the Operator
	// this is used to name and label loggers, k8s resources, and metrics exposed
	// by the operator. Should be [valid Kube resource names](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
	OperatorName string `protobuf:"bytes,3,opt,name=operatorName,proto3" json:"operatorName,omitempty"`
	// Each phase represents a different
	// stage in the lifecycle of the CRD (e.g. Pending/Succeeded/Failed).
	// <br>
	// Each phase specifies a unique name
	// and its own set of inputs and outputs.
	Phases []*Phase `protobuf:"bytes,4,rep,name=phases,proto3" json:"phases,omitempty"`
	// enable use of a Finalizer to handle object deletion
	EnableFinalizer bool `protobuf:"varint,5,opt,name=enableFinalizer,proto3" json:"enableFinalizer,omitempty"`
	// custom Parameters which extend Autopilot's builtin types
	CustomParameters []*Parameter `protobuf:"bytes,6,rep,name=customParameters,proto3" json:"customParameters,omitempty"`
	// custom Queries which extend Autopilot's metrics queries
	Queries              []*MetricsQuery `protobuf:"bytes,7,rep,name=queries,proto3" json:"queries,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *AutopilotProject) Reset()         { *m = AutopilotProject{} }
func (m *AutopilotProject) String() string { return proto.CompactTextString(m) }
func (*AutopilotProject) ProtoMessage()    {}
func (*AutopilotProject) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7c7e86e2b87635e, []int{0}
}

func (m *AutopilotProject) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AutopilotProject.Unmarshal(m, b)
}
func (m *AutopilotProject) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AutopilotProject.Marshal(b, m, deterministic)
}
func (m *AutopilotProject) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AutopilotProject.Merge(m, src)
}
func (m *AutopilotProject) XXX_Size() int {
	return xxx_messageInfo_AutopilotProject.Size(m)
}
func (m *AutopilotProject) XXX_DiscardUnknown() {
	xxx_messageInfo_AutopilotProject.DiscardUnknown(m)
}

var xxx_messageInfo_AutopilotProject proto.InternalMessageInfo

func (m *AutopilotProject) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *AutopilotProject) GetApiVersion() string {
	if m != nil {
		return m.ApiVersion
	}
	return ""
}

func (m *AutopilotProject) GetOperatorName() string {
	if m != nil {
		return m.OperatorName
	}
	return ""
}

func (m *AutopilotProject) GetPhases() []*Phase {
	if m != nil {
		return m.Phases
	}
	return nil
}

func (m *AutopilotProject) GetEnableFinalizer() bool {
	if m != nil {
		return m.EnableFinalizer
	}
	return false
}

func (m *AutopilotProject) GetCustomParameters() []*Parameter {
	if m != nil {
		return m.CustomParameters
	}
	return nil
}

func (m *AutopilotProject) GetQueries() []*MetricsQuery {
	if m != nil {
		return m.Queries
	}
	return nil
}

// MeshProviders provide an interface to monitoring and managing a specific
// mesh.
//
// Autopilot does not abstract the mesh API - Autopilot developers must
// still reason able about Provider-specific CRDs. Autopilot's job is to
// abstract operational concerns such as discovering control plane configuration
// and monitoring metrics.
type Phase struct {
	// name of the phase. must be unique
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// description of the phase. used for comments and docs
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	// indicates whether this is the initial phase of the system.
	// exactly one phase must be the initial phase
	Initial bool `protobuf:"varint,3,opt,name=initial,proto3" json:"initial,omitempty"`
	// indicates whether this is a "final" or "resting" phase of the system.
	// when the CRD is in the final phase, no more processing will be done on it
	Final bool `protobuf:"varint,4,opt,name=final,proto3" json:"final,omitempty"`
	// the set of inputs for this phase
	// the inputs will be retrieved by the scheduler
	// and passed to the worker as input parameters
	//
	// custom inputs can be defined in the
	// autopilot.yaml
	Inputs []string `protobuf:"bytes,5,rep,name=inputs,proto3" json:"inputs,omitempty"`
	// the set of outputs for this phase
	// the inputs will be propagated to k8s storage (etcd) by the scheduler.
	//
	// custom outputs can be defined in the
	// autopilot.yaml
	Outputs              []string `protobuf:"bytes,6,rep,name=outputs,proto3" json:"outputs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Phase) Reset()         { *m = Phase{} }
func (m *Phase) String() string { return proto.CompactTextString(m) }
func (*Phase) ProtoMessage()    {}
func (*Phase) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7c7e86e2b87635e, []int{1}
}

func (m *Phase) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Phase.Unmarshal(m, b)
}
func (m *Phase) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Phase.Marshal(b, m, deterministic)
}
func (m *Phase) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Phase.Merge(m, src)
}
func (m *Phase) XXX_Size() int {
	return xxx_messageInfo_Phase.Size(m)
}
func (m *Phase) XXX_DiscardUnknown() {
	xxx_messageInfo_Phase.DiscardUnknown(m)
}

var xxx_messageInfo_Phase proto.InternalMessageInfo

func (m *Phase) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Phase) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Phase) GetInitial() bool {
	if m != nil {
		return m.Initial
	}
	return false
}

func (m *Phase) GetFinal() bool {
	if m != nil {
		return m.Final
	}
	return false
}

func (m *Phase) GetInputs() []string {
	if m != nil {
		return m.Inputs
	}
	return nil
}

func (m *Phase) GetOutputs() []string {
	if m != nil {
		return m.Outputs
	}
	return nil
}

// Custom Parameters allow code to be generated
// for inputs/outputs that are not built-in to Autopilot.
// These types must be Kubernetes-compatible Go structs.
type Parameter struct {
	// the fully lower-case name of this resource
	// e.g. "pods", "services", "replicasets", "configmaps"
	LowerName string `protobuf:"bytes,1,opt,name=lowerName,proto3" json:"lowerName,omitempty"`
	// the singular CamelCased name of the resource
	// equivalent to Kind
	SingleName string `protobuf:"bytes,2,opt,name=singleName,proto3" json:"singleName,omitempty"`
	// the plural CamelCased name of the resource
	// equivalent to the pluralized form of Kind
	PluralName string `protobuf:"bytes,3,opt,name=pluralName,proto3" json:"pluralName,omitempty"`
	// import prefix used by generated code
	ImportPrefix string `protobuf:"bytes,4,opt,name=importPrefix,proto3" json:"importPrefix,omitempty"`
	// go package (import path) to the go struct for the resource
	Package string `protobuf:"bytes,5,opt,name=package,proto3" json:"package,omitempty"`
	// Kubernetes API group for the resource
	// e.g. "networking.istio.io"
	ApiGroup string `protobuf:"bytes,6,opt,name=apiGroup,proto3" json:"apiGroup,omitempty"`
	// indicates whether the resource is a CRD
	// if true, the Resource will be added to the operator's runtime.Scheme
	IsCrd                bool     `protobuf:"varint,7,opt,name=isCrd,proto3" json:"isCrd,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Parameter) Reset()         { *m = Parameter{} }
func (m *Parameter) String() string { return proto.CompactTextString(m) }
func (*Parameter) ProtoMessage()    {}
func (*Parameter) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7c7e86e2b87635e, []int{2}
}

func (m *Parameter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Parameter.Unmarshal(m, b)
}
func (m *Parameter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Parameter.Marshal(b, m, deterministic)
}
func (m *Parameter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Parameter.Merge(m, src)
}
func (m *Parameter) XXX_Size() int {
	return xxx_messageInfo_Parameter.Size(m)
}
func (m *Parameter) XXX_DiscardUnknown() {
	xxx_messageInfo_Parameter.DiscardUnknown(m)
}

var xxx_messageInfo_Parameter proto.InternalMessageInfo

func (m *Parameter) GetLowerName() string {
	if m != nil {
		return m.LowerName
	}
	return ""
}

func (m *Parameter) GetSingleName() string {
	if m != nil {
		return m.SingleName
	}
	return ""
}

func (m *Parameter) GetPluralName() string {
	if m != nil {
		return m.PluralName
	}
	return ""
}

func (m *Parameter) GetImportPrefix() string {
	if m != nil {
		return m.ImportPrefix
	}
	return ""
}

func (m *Parameter) GetPackage() string {
	if m != nil {
		return m.Package
	}
	return ""
}

func (m *Parameter) GetApiGroup() string {
	if m != nil {
		return m.ApiGroup
	}
	return ""
}

func (m *Parameter) GetIsCrd() bool {
	if m != nil {
		return m.IsCrd
	}
	return false
}

// MetricsQueries extend the query options available to workers.
// MetricsQueries are accessible to workers via generated client code
// that lives in <project root>/pkg/metrics
//
//
// The following MetricsQuery:
//
// ```
// name: success-rate
// parameters:
// - Name
// - Namespace
// - Interval
// queryTemplate: |
//     sum(
//         rate(
//             envoy_cluster_upstream_rq{
//                 kubernetes_namespace="{{ .Namespace }}",
//                 kubernetes_pod_name=~"{{ .Name }}-[0-9a-zA-Z]+(-[0-9a-zA-Z]+)",
//                 envoy_response_code!~"5.*"
//             }[{{ .Interval }}]
//         )
//     )
//     /
//     sum(
//         rate(
//             envoy_cluster_upstream_rq{
//                 kubernetes_namespace="{{ .Namespace }}",
//                 kubernetes_pod_name=~"{{ .Name }}-[0-9a-zA-Z]+(-[0-9a-zA-Z]+)"
//             }[{{ .Interval }}]
//         )
//     )
//     * 100
// ```
//
// would produce the following `metrics` Interface:
//
// ```go
// type CanaryDeploymentMetrics interface {
//     metrics.Client
//     GetIstioSuccessRate(ctx context.Context, Namespace, Name, Interval string) (*metrics.QueryResult, error)
//     GetIstioRequestDuration(ctx context.Context, Namespace, Name, Interval string) (*metrics.QueryResult, error)
//     GetEnvoySuccessRate(ctx context.Context, Namespace, Name, Interval string) (*metrics.QueryResult, error)
//     GetEnvoyRequestDuration(ctx context.Context, Namespace, Name, Interval string) (*metrics.QueryResult, error)
// }
// ```
type MetricsQuery struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	QueryTemplate        string   `protobuf:"bytes,2,opt,name=queryTemplate,proto3" json:"queryTemplate,omitempty"`
	Parameters           []string `protobuf:"bytes,3,rep,name=parameters,proto3" json:"parameters,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MetricsQuery) Reset()         { *m = MetricsQuery{} }
func (m *MetricsQuery) String() string { return proto.CompactTextString(m) }
func (*MetricsQuery) ProtoMessage()    {}
func (*MetricsQuery) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7c7e86e2b87635e, []int{3}
}

func (m *MetricsQuery) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MetricsQuery.Unmarshal(m, b)
}
func (m *MetricsQuery) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MetricsQuery.Marshal(b, m, deterministic)
}
func (m *MetricsQuery) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MetricsQuery.Merge(m, src)
}
func (m *MetricsQuery) XXX_Size() int {
	return xxx_messageInfo_MetricsQuery.Size(m)
}
func (m *MetricsQuery) XXX_DiscardUnknown() {
	xxx_messageInfo_MetricsQuery.DiscardUnknown(m)
}

var xxx_messageInfo_MetricsQuery proto.InternalMessageInfo

func (m *MetricsQuery) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MetricsQuery) GetQueryTemplate() string {
	if m != nil {
		return m.QueryTemplate
	}
	return ""
}

func (m *MetricsQuery) GetParameters() []string {
	if m != nil {
		return m.Parameters
	}
	return nil
}

func init() {
	proto.RegisterType((*AutopilotProject)(nil), "autopilot.AutopilotProject")
	proto.RegisterType((*Phase)(nil), "autopilot.Phase")
	proto.RegisterType((*Parameter)(nil), "autopilot.Parameter")
	proto.RegisterType((*MetricsQuery)(nil), "autopilot.MetricsQuery")
}

func init() {
	proto.RegisterFile("autopilot.proto", fileDescriptor_f7c7e86e2b87635e)
}

var fileDescriptor_f7c7e86e2b87635e = []byte{
	// 467 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x53, 0xdb, 0x8e, 0xd3, 0x30,
	0x10, 0x55, 0xb7, 0x6d, 0xda, 0xcc, 0x2e, 0xda, 0xca, 0x5a, 0x81, 0x85, 0x10, 0x8a, 0x02, 0x48,
	0x79, 0xa1, 0xd5, 0xc2, 0x0f, 0x70, 0x91, 0xe0, 0x09, 0x54, 0x22, 0xc4, 0x03, 0x6f, 0x6e, 0x3a,
	0xdb, 0x0e, 0xeb, 0xc4, 0xc6, 0x17, 0x60, 0xf9, 0x19, 0x3e, 0x82, 0xaf, 0xe1, 0x6f, 0x90, 0xdd,
	0xa6, 0x49, 0x61, 0xdf, 0x7c, 0xce, 0x19, 0x8f, 0x66, 0xce, 0xb1, 0xe1, 0x5c, 0x78, 0xa7, 0x34,
	0x49, 0xe5, 0xe6, 0xda, 0x28, 0xa7, 0x58, 0x7a, 0x20, 0xf2, 0xdf, 0x27, 0x30, 0x7b, 0xd9, 0xa2,
	0xa5, 0x51, 0x5f, 0xb0, 0x72, 0x8c, 0xc1, 0xe8, 0x9a, 0x9a, 0x35, 0x1f, 0x64, 0x83, 0x22, 0x2d,
	0xe3, 0x99, 0x3d, 0x04, 0x10, 0x9a, 0x3e, 0xa1, 0xb1, 0xa4, 0x1a, 0x7e, 0x12, 0x95, 0x1e, 0xc3,
	0x72, 0x38, 0x53, 0x1a, 0x8d, 0x70, 0xca, 0xbc, 0x17, 0x35, 0xf2, 0x61, 0xac, 0x38, 0xe2, 0x58,
	0x01, 0x89, 0xde, 0x0a, 0x8b, 0x96, 0x8f, 0xb2, 0x61, 0x71, 0xfa, 0x6c, 0x36, 0xef, 0x26, 0x5b,
	0x06, 0xa1, 0xdc, 0xeb, 0xac, 0x80, 0x73, 0x6c, 0xc4, 0x4a, 0xe2, 0x1b, 0x6a, 0x84, 0xa4, 0x9f,
	0x68, 0xf8, 0x38, 0x1b, 0x14, 0xd3, 0xf2, 0x5f, 0x9a, 0xbd, 0x80, 0x59, 0xe5, 0xad, 0x53, 0xf5,
	0x52, 0x18, 0x51, 0xa3, 0x43, 0x63, 0x79, 0x12, 0xbb, 0x5f, 0xf4, 0xbb, 0xb7, 0x62, 0xf9, 0x5f,
	0x35, 0xbb, 0x84, 0xc9, 0x57, 0x8f, 0x86, 0xd0, 0xf2, 0x49, 0xbc, 0x78, 0xaf, 0x77, 0xf1, 0x1d,
	0x3a, 0x43, 0x95, 0xfd, 0xe0, 0xd1, 0xdc, 0x94, 0x6d, 0x5d, 0xfe, 0x6b, 0x00, 0xe3, 0x38, 0x70,
	0xb0, 0xaa, 0x09, 0xeb, 0xee, 0xad, 0x0a, 0x67, 0x96, 0xc1, 0xe9, 0x1a, 0x6d, 0x65, 0x48, 0xbb,
	0xce, 0xab, 0x3e, 0xc5, 0x38, 0x4c, 0xa8, 0x21, 0x47, 0x42, 0x46, 0x9f, 0xa6, 0x65, 0x0b, 0xd9,
	0x05, 0x8c, 0xaf, 0xc2, 0x6e, 0x7c, 0x14, 0xf9, 0x1d, 0x60, 0x77, 0x21, 0xa1, 0x46, 0x7b, 0x67,
	0xf9, 0x38, 0x1b, 0x16, 0x69, 0xb9, 0x47, 0xa1, 0x8f, 0xf2, 0x2e, 0x0a, 0x49, 0x14, 0x5a, 0x98,
	0xff, 0x19, 0x40, 0x7a, 0xd8, 0x91, 0x3d, 0x80, 0x54, 0xaa, 0xef, 0xb8, 0x4b, 0x66, 0x37, 0x6a,
	0x47, 0x84, 0x68, 0x2d, 0x35, 0x1b, 0x89, 0x51, 0xde, 0x47, 0xdb, 0x31, 0x41, 0xd7, 0xd2, 0x1b,
	0x21, 0x7b, 0xc1, 0xf6, 0x98, 0x10, 0x3d, 0xd5, 0x5a, 0x19, 0xb7, 0x34, 0x78, 0x45, 0x3f, 0xe2,
	0xe8, 0x69, 0x79, 0xc4, 0x85, 0x49, 0xb5, 0xa8, 0xae, 0xc5, 0x06, 0x63, 0x90, 0x69, 0xd9, 0x42,
	0x76, 0x1f, 0xa6, 0x42, 0xd3, 0x5b, 0xa3, 0xbc, 0xe6, 0x49, 0x94, 0x0e, 0x38, 0xb8, 0x41, 0xf6,
	0xb5, 0x59, 0xf3, 0xc9, 0xce, 0x8d, 0x08, 0xf2, 0x2d, 0x9c, 0xf5, 0x63, 0xb9, 0x35, 0x83, 0xc7,
	0x70, 0x27, 0x84, 0x75, 0xf3, 0x11, 0x6b, 0x2d, 0x85, 0x6b, 0xd7, 0x3a, 0x26, 0xe3, 0x66, 0xdd,
	0xb3, 0x19, 0x46, 0x0b, 0x7b, 0xcc, 0xab, 0x27, 0x9f, 0x1f, 0x6d, 0xc8, 0x6d, 0xfd, 0x6a, 0x5e,
	0xa9, 0x7a, 0x61, 0x95, 0x54, 0x4f, 0x49, 0x2d, 0x0e, 0xaf, 0x63, 0x21, 0x34, 0x2d, 0xbe, 0x5d,
	0xae, 0x92, 0xf8, 0xad, 0x9e, 0xff, 0x0d, 0x00, 0x00, 0xff, 0xff, 0xe9, 0x2a, 0x1e, 0x67, 0x69,
	0x03, 0x00, 0x00,
}
