package weights

import (
	"github.com/pkg/errors"
	"istio.io/client-go/pkg/apis/networking/v1alpha3"
)

// gets the weights for the canary and primary destinations
func SetWeights(virtualService *v1alpha3.VirtualService, primaryWeight, canaryWeight int32) error {
	// for shift weights on each per-port route
	for _, httpPort := range virtualService.Spec.Http {
		if len(httpPort.Route) != 2 {
			return errors.Errorf("expected 2 routes on http rule %v, found %v", httpPort.Name, len(virtualService.Spec.Http))
		}
		primaryRoute, canaryRoute := httpPort.Route[0], httpPort.Route[1]

		// set primary
		primaryRoute.Weight = primaryWeight
		// set canary
		canaryRoute.Weight = canaryWeight
	}

	return nil
}


// sets the weights to the canary and primary destinations
func SetWeights(virtualService *v1alpha3.VirtualService, primaryWeight, canaryWeight int32) error {
	// for shift weights on each per-port route
	for _, httpPort := range virtualService.Spec.Http {
		if len(httpPort.Route) != 2 {
			return errors.Errorf("expected 2 routes on http rule %v, found %v", httpPort.Name, len(virtualService.Spec.Http))
		}
		primaryRoute, canaryRoute := httpPort.Route[0], httpPort.Route[1]

		// set primary
		primaryRoute.Weight = primaryWeight
		// set canary
		canaryRoute.Weight = canaryWeight
	}

	return nil
}

