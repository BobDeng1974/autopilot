package v1

import (
	v1 "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// TestSpec creates a deployment and a load tester for that deployment
// TestSpec defines the desired state of Test
// +k8s:openapi-gen=true
type TestSpec struct {
	PodSpec v1.PodSpec `json:"podSpec"`

	// Service must stay above this number in order to pass
	SuccessThreshold float64 `json:"successThreshold"`

	// Duration of the test
	Duration metav1.Duration `json:"duration"`
}

// TestStatusInfo defines an observed condition of Test
// +k8s:openapi-gen=true
type TestStatusInfo struct {
	// used to record the time processing started
	TimeStarted metav1.Time `json:"timeStarted"`

	// each recorded result
	Results []float64 `json:"results"`
}
